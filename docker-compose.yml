x-environment: &default-environment
  DATABASE_URL: postgres://user:password@postgres:5432/database
  SECRET_KEY: secret # best to run openssl rand -hex 32
  PORT: 8000 # If changing, change the web service port too
  EMAIL_URL: consolemail:// # Example smtp://email:password@smtp_url:port https://glitchtip.com/documentation/install#configuration
  GLITCHTIP_DOMAIN: https://glitchtip.example.com # Change this to your domain
  DEFAULT_FROM_EMAIL: email@example.com # Change this to your email
  CELERY_WORKER_AUTOSCALE: "1,3" # Scale between 1 and 3 to prevent excessive memory usage. Change it or remove to set it to the number of cpu cores.

# docker-compose exec glitchtip ./manage.py migrate  //to migrate all needed schemes and tables
# there might be a question of making ./manage.py makemigrations to initiate the tables
# then register in glitchtip localhost:8000 and you'll appear in users_user table

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      # VITE_API_URL: http://localhost:4000/graphql
      # VITE_KEYCLOAK_URLhttp: //localhost:8080
    depends_on:
      - graphql
      - keycloak
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    networks:
      - local-network

  nft-service:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./nft-service:/app
    command:
      [
        "sh",
        "-c",
        "pip install -r requirements.txt && python manage.py migrate runserver 0.0.0.0:8001",
      ]
    ports:
      - "8001:8001"
    environment:
      MONGO_URL: mongo://user:password@mongodb:27017/database
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - minio
      - redis
    networks:
      - local-network

  chat-service:
    image: node:18
    working_dir: /app
    volumes:
      - ./chat-service:/app
    command: ["sh", "-c", "npm install && npm start"]
    ports:
      - "3002:3002"
    environment:
      MONGO_URL: mongo://user:password@mongodb:27017/database
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - local-network

  forum-service:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./forum-service:/app
    command:
      [
        "sh",
        "-c",
        "pip install -r requirements.txt && python manage.py migrate && runserver 0.0.0.0:8002",
      ]
    ports:
      - "8002:8002"
    environment:
      POSTGRES_URL: postgres://user:password@postgres:5432
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - local-network

  auth-service:
    image: node:24.0.0
    working_dir: /app
    # build:
    #   context: ./auth-service
    #   dockerfile: Dockerfile
    volumes:
      - ./auth-service:/app
    command: ["sh", "-c", "npm install && npm run build && npm start"]
    ports:
      - "3004:3004"
    environment:
      POSTGRES_URL: postgres://user:password@postgres:5432/database
      KEYCLOAK_URL: http://keycloak:8080
    depends_on:
      - postgres
      - keycloak
    networks:
      - local-network

  blockchain:
    image: trufflesuite/ganache
    ports:
      - "8545:8545"
    command: >
      ganache --wallet.seed my-seed-phrase --networkId 1337
    networks:
      - local-network

  minio:
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - local-network

  nginx:
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - graphql
    networks:
      - local-network

  graphql:
    image: node:24.0.0
    working_dir: /app
    volumes:
      - ./graphql:/app
    command: ["sh", "-c", "npm install && npm start"]
    ports:
      - "4000:4000"
    environment:
      NFT_SERVICES_URL: http://nft-service:8001
      CHAT_SERVICE_URL: http://chat-service:3002
      FORUM_SERIVCE_URL: http://forum-service:8002
      AUTH_SERVICE_URL: http://auth-serivce:3004
    depends_on:
      - nft-service
      - chat-service
      - forum-service
      - auth-service
    networks:
      - local-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./persistent-data/db/postgres_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - local-network
      
  # mongodb://user:password@localhost:27017/database?authSource=admin //to connect to mongo
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: database
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./persistent-data/db/mongo_db.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - local-network
  redis:
    image: redis:latest
    networks:
      - local-network

  keycloak:
    image: keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: database
      DB_USER: user
      DB_PASSWORD: password
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME_URL: http://keycloak:8080
      KC_HOSTNAME: localhost
      # KC_DB_URL: postgres://user:password@postgres:5432/database
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/database
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      # KC_HOSTNAME_STRICT: false
      # KEYCLOAK_FRONTEND_URL: http://localhost:3004
      KEYCLOAK_URL: http://keycloak:8080
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./persistent-data/kc-data:/opt/keycloak/data/import
    depends_on:
      - postgres
    networks:
      - local-network
    command: start-dev --import-realm

  glitchtip:
    image: glitchtip/glitchtip
    ports:
      - "8000:8000"
    environment: *default-environment
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    volumes:
      - glitchtip-data:/code/uploads
    networks:
      - local-network

networks:
  local-network:
    driver: bridge
volumes:
  minio-data:
    driver: local
  mongo-data:
    driver: local
  glitchtip-data:
    driver: local
  postgres-data:
    driver: local
  uploads-glitchtip:
